<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>flex布局学习和总结</title>
      <link href="/2018/02/11/flex%E5%B8%83%E5%B1%80%E5%85%A8%E8%A7%A3%E6%9E%90/"/>
      <content type="html"><![CDATA[<p><img src="http://img0.ph.126.net/SrfrDWtKJcCA-vNEWTU-wA==/3082713944955235032.png" alt="image">  </p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>很长一段时间, 我知道有<code>flex</code>这个布局方式, 但是始终没有去学它.  </p><p>最近由于学习小程序，发现里面需要使用<code>flex</code>布局, 于是决定学习一下. </p><a id="more"></a> <p>在拜读了阮一峰的<code>flex</code>布局教程和<code>HaoyCn</code>有关<code>flex</code>属性的回答后整理成此文章，以便加深印象。  </p><h1 id="什么是flex"><a href="#什么是flex" class="headerlink" title="什么是flex"></a>什么是flex</h1><p><code>Flexbox Layout</code>，官方名为 <code>CSS Flexible Box Layout Module</code>, 意为”弹性布局”，是<code>CSS3</code>中引入的一种更加灵活高效的布局/对齐/排序方式(还有一种更适合大型布局的网格布局<code>CSS Grid Layout Module</code>). <code>flex</code>是<code>flexible</code>的缩写.  </p><p>任何一个容器都可以指定为<code>flex</code>布局。   </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">   display: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>行内元素也可以使用<code>flex</code>布局。    </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">   display: inline-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="flex的基本概念"><a href="#flex的基本概念" class="headerlink" title="flex的基本概念"></a>flex的基本概念</h1><p><img src="http://img0.ph.126.net/FW70OwNnrYMBFCG9uHyXBA==/6597802041402786807.png" alt="image">     </p><p>1、采用<code>flex</code>布局的元素被称为<code>flex</code><strong>容器</strong><code>（flex container）</code>，他的子元素即为<code>flex</code>元素<code>（flex item）</code>。<br>2、<code>flex</code>容器中包含两个相互垂直的轴，即<strong>主轴</strong>（main axis）和<strong>副轴</strong><code>（cross axis)</code>。<br>3、flex元素沿主轴从<strong>主轴起点</strong> <code>(main start)</code>到<strong>主轴终点 </strong><code>(main end)</code>依次排布。<br>4、如果<code>flex</code>容器包含多行<code>flex</code>元素，则<code>flex</code>行<code>（flex lines）</code>沿<strong>副轴</strong>从<strong>副轴起点</strong><code>（cross start）</code>到<strong>副轴</strong>终点<code>（cross end)</code>依次排布。<br>5、单个<code>flex</code>元素占据的主轴空间叫做<strong>主轴程度</strong><code>（main size）</code>，占据的副轴空间叫做<strong>副轴</strong>长度<code>（cross size）</code>。   </p><h1 id="flex的兼容性"><a href="#flex的兼容性" class="headerlink" title="flex的兼容性"></a>flex的兼容性</h1><p><img src="http://img0.ph.126.net/Xo3CmTRormxS2Yxa7XqZHA==/6632188168049917746.jpg" alt="image"></p><h1 id="flex属性"><a href="#flex属性" class="headerlink" title="flex属性"></a>flex属性</h1><h2 id="用于flex容器的属性"><a href="#用于flex容器的属性" class="headerlink" title="用于flex容器的属性"></a>用于flex容器的属性</h2><p>以下6个属性设置在容器上    </p><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>flex-direction</td><td>主轴方向</td></tr><tr><td>flex-wrap</td><td>换行样式</td></tr><tr><td>flex-flow</td><td>前两个的简写形式</td></tr><tr><td>justify-content</td><td>主轴对齐方式</td></tr><tr><td>align-items</td><td>单行的副轴对齐方式</td></tr><tr><td>align-content</td><td>多行的副轴对齐方式</td></tr></tbody></table><p>注意：<br><code>flex</code>容器的<code>column-*</code>属性会失效。<br><code>flex</code>容器无法拥有<code>::first-line</code>和 <code>::first-letter</code>虚元素。   </p><h2 id="flex-direction属性"><a href="#flex-direction属性" class="headerlink" title="flex-direction属性"></a>flex-direction属性</h2><p><code>flex-direction</code> 属性决定主轴方向(即项目的排序方向)。</p><table><thead><tr><th>含义</th><th>主轴方向</th></tr></thead><tbody><tr><td>可选值</td><td>row 、row-reverse 、 column 、 column-reverse</td></tr><tr><td>默认值</td><td>row</td></tr><tr><td>row</td><td>主轴为水平方向，七点在左端。</td></tr><tr><td>row-reverse</td><td>主轴为水平方向，起点在右端。</td></tr><tr><td>column</td><td>主轴为垂直方向，起点在上沿。</td></tr><tr><td>column-reverse</td><td>主轴为垂直方向，起点在下沿。</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">   flex-direction: row  | row-reverse | column | column-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img1.ph.126.net/TusyFWd5qVj1yA5_hY515w==/6630620264468849002.png" alt="image"> </p><h2 id="flex-wrap属性"><a href="#flex-wrap属性" class="headerlink" title="flex-wrap属性"></a>flex-wrap属性</h2><p>默认情况下，项目都排在一条线（又称”轴线”）上。<code>flex-wrap</code>属性定义，如果一条轴线排不下，如何换行。</p><p><img src="http://img0.ph.126.net/vpQWGZ9YILFxG1SnK_JuOg==/6631928683305760833.png" alt="image"> </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">   flex-wrap: nowrap | wrap | wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它可能取三个值    </p><p>（1）<code>nowrap</code>（默认）：不换行。<br><img src="http://img2.ph.126.net/msCXJ8xngHoO_qRk1Qe1vw==/1276770494378291483.png" alt="image"> </p><p>（2）<code>wrap</code>：换行，第一行在上方。<br><img src="http://img0.ph.126.net/xArHebPijcQhUlF1p-axcQ==/6632574096631904937.jpg" alt="image">  </p><p>（3）<code>wrap-reverse</code>：换行，第一行在下方。<br> <img src="http://img1.ph.126.net/c3Epuhm2R3_jeore0GVOBQ==/6632547708352838446.jpg" alt="image"></p><h2 id="flex-flow属性"><a href="#flex-flow属性" class="headerlink" title="flex-flow属性"></a>flex-flow属性</h2><p><code>flex-flow</code>属相是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为 <code>row nowrap</code>。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">  flex-flow:&lt;flex-direction&gt;||&lt;flex-wrap&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="justify-content属性"><a href="#justify-content属性" class="headerlink" title="justify-content属性"></a>justify-content属性</h2><p>它可能取5个值，具体对齐方式与轴的方向有关，下面假设主轴为从左到右。    </p><table><thead><tr><th>值</th><th>主轴方向</th></tr></thead><tbody><tr><td>flex-start</td><td>默认值：左对齐</td></tr><tr><td>flex-end</td><td>右对齐</td></tr><tr><td>center</td><td>居中</td></tr><tr><td>space-between</td><td>两端对齐，项目之间的间隔都相等。</td></tr><tr><td>space-around</td><td>每个项目两侧的间隔相等。所以，项目之间比项目与边框的间隔大一倍。</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">  justify-content: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img0.ph.126.net/sQ24jP_UbZTaX-4xnCSB9A==/885238801855412886.png" alt="image">  </p><h2 id="align-items属性"><a href="#align-items属性" class="headerlink" title="align-items属性"></a>align-items属性</h2><p><code>align-items</code>属性定义项目在交叉轴上如何对齐。<br>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。   </p><table><thead><tr><th>值</th><th>主轴方向</th></tr></thead><tbody><tr><td>flex-start</td><td>交叉轴的起点对齐。</td></tr><tr><td>flex-end</td><td>交叉轴的终点对齐。</td></tr><tr><td>center</td><td>交叉轴的中点对齐。</td></tr><tr><td>baseline</td><td>项目的第一行文字的基线对齐。</td></tr><tr><td>stretch</td><td>（默认值）:如果项目未设置高度或设为<code>auto</code>，将占满整个容器的高度。   </td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">  align-items: flex-start  |  flex-end  |  center  |  baseline | stretch; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <img src="http://img0.ph.126.net/UG2taKlwv4norCpweTgc2w==/1278177869261555991.png" alt="image">  </p><h2 id="align-content属性"><a href="#align-content属性" class="headerlink" title="align-content属性"></a>align-content属性</h2><p><code>align-content</code>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。<br>该属性可能取6个值。</p><table><thead><tr><th>值</th><th>主轴方向</th></tr></thead><tbody><tr><td>flex-start</td><td>与交叉轴的起点对齐。</td></tr><tr><td>flex-end</td><td>与交叉轴的终点对齐。</td></tr><tr><td>center</td><td>与交叉轴的中点对齐。</td></tr><tr><td>space-between</td><td>与交叉轴两端对齐。轴线之间的间隔平均分布。</td></tr><tr><td>space-around</td><td>每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</td></tr><tr><td>stretch</td><td>（默认值）：轴线占满整个交叉轴。      </td></tr></tbody></table><p><img src="http://img0.ph.126.net/Hl4lEPCj1ks7KdPpdZCVHw==/850054429766521944.png" alt="image"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">   align-content: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="用于flex元素的属性"><a href="#用于flex元素的属性" class="headerlink" title="用于flex元素的属性"></a>用于flex元素的属性</h1><p>这类属性有6种，分别为:</p><table><thead><tr><th>属性</th><th>含义</th></tr></thead><tbody><tr><td>order</td><td>排列顺序。</td></tr><tr><td>align-self</td><td>flex元素的副轴对齐方式，对应与flex容器的<code>align-items</code>。</td></tr><tr><td>flex-grow</td><td>放大比例。</td></tr><tr><td>flex-shrink</td><td>缩小比例。</td></tr><tr><td>flex-basis</td><td>初始大小。</td></tr><tr><td>flex</td><td>（上面三个的简写形式。）</td></tr></tbody></table><p><strong>注意：</strong><code>flex</code>元素的 <code>float</code>，<code>clear</code>和<code>vertical-align</code>会失效。</p><h2 id="order属性"><a href="#order属性" class="headerlink" title="order属性"></a>order属性</h2><p><code>order</code>属性定义项目的排序顺序。数值越小，排列越靠前，默认为0.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">   order:&lt;integer&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img2.ph.126.net/kixMNontSObJoNzqot_3oA==/6632536713233255312.png" alt="image"></p><h2 id="align-self属性"><a href="#align-self属性" class="headerlink" title="align-self属性"></a>align-self属性</h2><p><code>align-self</code>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">   align-self:&#123; auto | flex-start | flex-end | center | baseline | stretch &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img0.ph.126.net/U1EHHiGODW1wfZXMHqjDPA==/6632699440954604013.png" alt="image"></p><h2 id="flex-grow属性"><a href="#flex-grow属性" class="headerlink" title="flex-grow属性"></a>flex-grow属性</h2><p><code>flex-grow</code>属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p><p>如果所有项目的<code>flex-grow</code>属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的<code>flex-grow</code>属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">   flex-grow:&lt;number&gt;; /*default 0*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img2.ph.126.net/GfJvmD9lAngUzjev9sM_vg==/6632090311515049040.png" alt="image"></p><h2 id="flex-shrink属性"><a href="#flex-shrink属性" class="headerlink" title="flex-shrink属性"></a>flex-shrink属性</h2><p><code>flex-shrink</code>属性定义了项目的缩小比例，默认为1，即如果空间不足，盖项目将缩小。<br><code>flex-shrink</code>为 0 则表示，即使<code>flex</code>容器空间不足，该<code>flex</code>元素也不缩小。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">   flex-shrink:&lt;number&gt;; /* default 1 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://img0.ph.126.net/QgD16C2vA4DacimlfFqTeQ==/2094455301804297114.jpg" alt="image"></p><h2 id="flex-basis属性"><a href="#flex-basis属性" class="headerlink" title="flex-basis属性"></a>flex-basis属性</h2><table><thead><tr><th>含义</th><th>初始大小</th></tr></thead><tbody><tr><td>可选值</td><td>auto、<length>(非负值)。</length></td></tr><tr><td>默认值</td><td>auto。</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">   flex-basis: &lt;length&gt; | auto; /* default auto */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>flex-basis</code>定义了分配剩余空间之前<code>flex</code>元素的初始大小，可为长度值（如 20%，5rem等）或 <code>auto</code>等关键词。<br><code>flex-basis: auto</code>表示, 以<code>flex</code>元素的主轴长度为<code>flex-basis</code>. 若flex元素的主轴长度也是<code>auto</code>, 则以<code>flex</code>元素内容(即所有子元素)的大小为<code>flex-basis</code>。</p><h2 id="flex属性-1"><a href="#flex属性-1" class="headerlink" title="flex属性"></a>flex属性</h2><table><thead><tr><th>含义</th><th><code>flex-grow</code>, <code>flex-shrink</code>和<code>flex-basis</code>的简写形式</th></tr></thead><tbody><tr><td>可选值</td><td>none [ &lt;‘flex-grow’&gt; &lt;‘flex-shrink’&gt;?、&lt;‘flex-basis’&gt; ]</td></tr><tr><td>默认值</td><td>0 1 auto</td></tr></tbody></table><ul><li>||用来分割两个或多个选项, 从中选取一个或多个, 不限次序.</li><li>|用来分割两个或多个选项, 从中选取一个.</li><li>[]只是用来分组的.</li><li>?代表可选.</li></ul><p>举例来说, a | [ b || c ]包含的可能情况有a, b, c, b c, c b.<br>现在回过头来再看<code>none</code> | [ &lt;‘flex-grow’&gt; &lt;‘flex-shrink’&gt;? || &lt;‘flex-basis’&gt; ]就清晰多了.<br>注意, <code>none</code>是一个特殊值, 相当于<code>0 0 auto</code>.<br>另外, 如果<code>flex</code>中不指定:</p><ul><li><code>flex-grow</code>成员, 则<code>flex-grow</code>会被置为1.</li><li><code>flex-shrink</code>成员, 则<code>flex-shrink</code>会被置为1.</li><li><code>flex-basis</code>成员, 则flex-basis会被置为0.<br>注意: <code>flex</code>的初始值是0 1 auto, 即由每个<code>flex</code>因子本身的默认值组成(比方说<code>flex-grow</code>的默认值就是0).</li></ul>]]></content>
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flex </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
