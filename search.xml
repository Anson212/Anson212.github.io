<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[flex布局学习和总结]]></title>
    <url>%2F2017%2F06%2F11%2Fflex-conclusion%2F</url>
    <content type="text"><![CDATA[前言很长一段时间, 我知道有flex这个布局方式, 但是始终没有去学它. 最近由于学习小程序，发现里面需要使用flex布局, 于是决定学习一下. 在拜读了阮一峰的flex布局教程和HaoyCn有关flex属性的回答后整理成此文章，以便加深印象。 什么是flexFlexbox Layout，官方名为 CSS Flexible Box Layout Module, 意为”弹性布局”，是CSS3中引入的一种更加灵活高效的布局/对齐/排序方式(还有一种更适合大型布局的网格布局CSS Grid Layout Module). flex是flexible的缩写. 任何一个容器都可以指定为flex布局。 123.box &#123; display: flex;&#125; 行内元素也可以使用flex布局。 123.box &#123; display: inline-flex;&#125; flex的基本概念 1、采用flex布局的元素被称为flex容器（flex container），他的子元素即为flex元素（flex item）。2、flex容器中包含两个相互垂直的轴，即主轴（main axis）和副轴（cross axis)。3、flex元素沿主轴从主轴起点 (main start)到主轴终点 (main end)依次排布。4、如果flex容器包含多行flex元素，则flex行（flex lines）沿副轴从副轴起点（cross start）到副轴终点（cross end)依次排布。5、单个flex元素占据的主轴空间叫做主轴程度（main size），占据的副轴空间叫做副轴长度（cross size）。 flex的兼容性 flex属性用于flex容器的属性以下6个属性设置在容器上 属性 含义 flex-direction 主轴方向 flex-wrap 换行样式 flex-flow 前两个的简写形式 justify-content 主轴对齐方式 align-items 单行的副轴对齐方式 align-content 多行的副轴对齐方式 注意：flex容器的column-*属性会失效。flex容器无法拥有::first-line和 ::first-letter虚元素。 flex-direction属性flex-direction 属性决定主轴方向(即项目的排序方向)。 含义 主轴方向 可选值 row 、row-reverse 、 column 、 column-reverse 默认值 row row 主轴为水平方向，七点在左端。 row-reverse 主轴为水平方向，起点在右端。 column 主轴为垂直方向，起点在上沿。 column-reverse 主轴为垂直方向，起点在下沿。 123.box&#123; flex-direction: row | row-reverse | column | column-reverse;&#125; flex-wrap属性默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。 123.box&#123; flex-wrap: nowrap | wrap | wrap-reverse;&#125; 它可能取三个值 （1）nowrap（默认）：不换行。 （2）wrap：换行，第一行在上方。 （3）wrap-reverse：换行，第一行在下方。 flex-flow属性flex-flow属相是flex-direction属性和flex-wrap属性的简写形式，默认值为 row nowrap。123.box&#123; flex-flow:&lt;flex-direction&gt;||&lt;flex-wrap&gt;;&#125; justify-content属性它可能取5个值，具体对齐方式与轴的方向有关，下面假设主轴为从左到右。 值 主轴方向 flex-start 默认值：左对齐 flex-end 右对齐 center 居中 space-between 两端对齐，项目之间的间隔都相等。 space-around 每个项目两侧的间隔相等。所以，项目之间比项目与边框的间隔大一倍。 123.box&#123; justify-content: flex-start | flex-end | center | space-between | space-around;&#125; align-items属性align-items属性定义项目在交叉轴上如何对齐。它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。 值 主轴方向 flex-start 交叉轴的起点对齐。 flex-end 交叉轴的终点对齐。 center 交叉轴的中点对齐。 baseline 项目的第一行文字的基线对齐。 stretch （默认值）:如果项目未设置高度或设为auto，将占满整个容器的高度。 123.box&#123; align-items: flex-start | flex-end | center | baseline | stretch; &#125; align-content属性align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。该属性可能取6个值。 值 主轴方向 flex-start 与交叉轴的起点对齐。 flex-end 与交叉轴的终点对齐。 center 与交叉轴的中点对齐。 space-between 与交叉轴两端对齐。轴线之间的间隔平均分布。 space-around 每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。 stretch （默认值）：轴线占满整个交叉轴。 123.box &#123; align-content: flex-start | flex-end | center | space-between | space-around | stretch;&#125; 用于flex元素的属性这类属性有6种，分别为: 属性 含义 order 排列顺序。 align-self flex元素的副轴对齐方式，对应与flex容器的align-items。 flex-grow 放大比例。 flex-shrink 缩小比例。 flex-basis 初始大小。 flex （上面三个的简写形式。） 注意：flex元素的 float，clear和vertical-align会失效。 order属性order属性定义项目的排序顺序。数值越小，排列越靠前，默认为0. 123.box&#123; order:&lt;integer&gt;;&#125; align-self属性align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。 123.box&#123; align-self:&#123; auto | flex-start | flex-end | center | baseline | stretch &#125;&#125; flex-grow属性flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。 如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。 123.box&#123; flex-grow:&lt;number&gt;; /*default 0*/&#125; flex-shrink属性flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，盖项目将缩小。flex-shrink为 0 则表示，即使flex容器空间不足，该flex元素也不缩小。 123.box&#123; flex-shrink:&lt;number&gt;; /* default 1 */&#125; flex-basis属性 含义 初始大小 可选值 auto、(非负值)。 默认值 auto。 123.box &#123; flex-basis: &lt;length&gt; | auto; /* default auto */&#125; flex-basis定义了分配剩余空间之前flex元素的初始大小，可为长度值（如 20%，5rem等）或 auto等关键词。flex-basis: auto表示, 以flex元素的主轴长度为flex-basis. 若flex元素的主轴长度也是auto, 则以flex元素内容(即所有子元素)的大小为flex-basis。 flex属性 含义 flex-grow, flex-shrink和flex-basis的简写形式 可选值 none [ &lt;‘flex-grow’&gt; &lt;‘flex-shrink’&gt;?、&lt;‘flex-basis’&gt; ] 默认值 0 1 auto ||用来分割两个或多个选项, 从中选取一个或多个, 不限次序. |用来分割两个或多个选项, 从中选取一个. []只是用来分组的. ?代表可选. 举例来说, a | [ b || c ]包含的可能情况有a, b, c, b c, c b.现在回过头来再看none | [ &lt;‘flex-grow’&gt; &lt;‘flex-shrink’&gt;? || &lt;‘flex-basis’&gt; ]就清晰多了.注意, none是一个特殊值, 相当于0 0 auto.另外, 如果flex中不指定: flex-grow成员, 则flex-grow会被置为1. flex-shrink成员, 则flex-shrink会被置为1. flex-basis成员, 则flex-basis会被置为0.注意: flex的初始值是0 1 auto, 即由每个flex因子本身的默认值组成(比方说flex-grow的默认值就是0).]]></content>
      <categories>
        <category>技术类</category>
      </categories>
      <tags>
        <tag>Flex</tag>
      </tags>
  </entry>
</search>
